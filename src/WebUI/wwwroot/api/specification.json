{
  "x-generator": "NSwag v13.11.3.0 (NJsonSchema v10.4.4.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "Booking API",
    "version": "1.0.0"
  },
  "paths": {
    "/api/Booking/GetList": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_GetList",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAvailableBookingCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleBookingDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Booking/Create": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_Create",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSimpleBookingCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Booking/GetAllViewBookRoom": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_GetAllViewBookRoom",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAvailableBookingCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleBookingDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Booking/GetMyRawBooking": {
      "get": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_GetMyRawBooking",
        "parameters": [
          {
            "name": "bookingId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 0
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Booking/CancelBooking": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_CancelBooking",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CancelCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Booking/UpdateSimpleBooking": {
      "post": {
        "tags": [
          "Booking"
        ],
        "operationId": "Booking_UpdateSimpleBooking",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSimpleBookingCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Equipment/GetNameList": {
      "get": {
        "tags": [
          "Equipment"
        ],
        "operationId": "Equipment_GetNameList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/EquipmentNameDtos"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Equipment/AddEquipment": {
      "post": {
        "tags": [
          "Equipment"
        ],
        "operationId": "Equipment_AddEquipment",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEquipmentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Equipment/RemoveEquipment": {
      "delete": {
        "tags": [
          "Equipment"
        ],
        "operationId": "Equipment_RemoveEquipment",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteEquipmentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Equipment/UpdateEquipment": {
      "put": {
        "tags": [
          "Equipment"
        ],
        "operationId": "Equipment_UpdateEquipment",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEquipmentCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/FireTest/welcome3": {
      "get": {
        "tags": [
          "FireTest"
        ],
        "operationId": "FireTest_Welcome3",
        "parameters": [
          {
            "name": "userName",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "jobId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/GetFullList": {
      "get": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_GetFullList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoomNameListDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/GetOne": {
      "get": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_GetOne",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreateUpdateRoomDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/CreateRoom": {
      "post": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_CreateRoom",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/DeleteRoom": {
      "delete": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_DeleteRoom",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Unit"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/UpdateRoom": {
      "put": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_UpdateRoom",
        "requestBody": {
          "x-name": "query",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoomCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/CreateUpdateRoom": {
      "post": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_CreateUpdateRoom",
        "requestBody": {
          "x-name": "query",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateRoomDto"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/GetMyList": {
      "get": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_GetMyList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoomNameListDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/CreateRoomSet": {
      "post": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_CreateRoomSet",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomSetCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/UpdateRoomSet": {
      "post": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_UpdateRoomSet",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoomSetCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/DeleteRoomSet": {
      "post": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_DeleteRoomSet",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRoomSetCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/GetAllRoomSet": {
      "post": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_GetAllRoomSet",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllRoomSets"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoomSet"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/GetOneRoomSet": {
      "get": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_GetOneRoomSet",
        "parameters": [
          {
            "name": "setId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoomSetDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/GetRoomSetSimple": {
      "get": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_GetRoomSetSimple",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoomSetSimpleDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/GetRoomExtraFields": {
      "get": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_GetRoomExtraFields",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RoomExtraInfoTemplate"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/Room/UpdateRoomExtraFields": {
      "post": {
        "tags": [
          "Room"
        ],
        "operationId": "Room_UpdateRoomExtraFields",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRoomExtraFieldsCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestBookings/SimpleDummy": {
      "get": {
        "tags": [
          "TestBookings"
        ],
        "operationId": "TestBookings_Welcome3",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BookingEvent"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/testing": {
      "get": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_Welcome3",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestMailCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SendResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/fireSchedule": {
      "post": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_Welcome2",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestMailCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/firefire": {
      "get": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_Welcome1",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendTestMailCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/GetSimpleServiceDto": {
      "get": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_GetSimpleServiceDto",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleServiceDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/UpdateSimpleServiceDto": {
      "get": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_UpdateSimpleServiceDto",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/SimpleAddOne": {
      "get": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_SimpleAddOne",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/UpdateEmailSettings": {
      "post": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_UpdateEmailSettings",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEmailSettingsCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/GetRawSmtpInfo": {
      "get": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_GetRawSmtpInfo",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SmtpClientOptions"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TestEmail/GetFireStatus": {
      "post": {
        "tags": [
          "TestEmail"
        ],
        "operationId": "TestEmail_GetFireStatus",
        "parameters": [
          {
            "name": "jobId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems": {
      "get": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_GetTodoItemsWithPagination",
        "parameters": [
          {
            "name": "ListId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          },
          {
            "name": "PageNumber",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "PageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfTodoItemDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/{id}": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoItems/UpdateItemDetails": {
      "put": {
        "tags": [
          "TodoItems"
        ],
        "operationId": "TodoItems_UpdateItemDetails",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoItemDetailCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Get",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodosVm"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Create",
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/TodoLists/{id}": {
      "get": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Get2",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "put": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Update",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "command",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateTodoListCommand"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "delete": {
        "tags": [
          "TodoLists"
        ],
        "operationId": "TodoLists_Delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetUserAll": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetUserAll",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SimpleUser"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetUserAllPaged": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetUserAllPaged",
        "requestBody": {
          "x-name": "query",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetAllUsersWithPage"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfSimpleUser"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/CreateUserSimple": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_CreateUserSimple",
        "requestBody": {
          "x-name": "query",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserSimpleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetMyUserGroup": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetMyUserGroup",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetAllUserRole": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetAllUserRole",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserRole"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetAllUserGroups": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetAllUserGroups",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/CreateUserRole": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_CreateUserRole",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserRoleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/UpdateUserRole": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_UpdateUserRole",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserRoleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/DeleteUserRole": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_DeleteUserRole",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserRoleCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/CreateUserGroup": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_CreateUserGroup",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserGroupCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/UpdateUserGroup": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_UpdateUserGroup",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserGroupCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/DeleteUserGroup": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_DeleteUserGroup",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteUserGroupCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetUserGroupById": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetUserGroupById",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetUserGroupById"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetSimpleUserGroupById": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetSimpleUserGroupById",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserGroupDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetRoleById": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetRoleById",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/AddGroupToUser": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_AddGroupToUser",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupToUserCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetUserinfo": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetUserinfo",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetUserGroupList": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetUserGroupList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupNameDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/GetSimpleUserGroup": {
      "get": {
        "tags": [
          "User"
        ],
        "operationId": "User_GetSimpleUserGroup",
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroupNameDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/User/UpdateSimpleUserGroup": {
      "post": {
        "tags": [
          "User"
        ],
        "operationId": "User_UpdateSimpleUserGroup",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSimpleUserGroupCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/GetPermissionNameList": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_GetPermissionNameList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserPermissionDto"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/CreatePermissionSet": {
      "post": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_CreatePermissionSet",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreatePermissionSetCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/DeletePermissionSet": {
      "post": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_DeletePermissionSet",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeletePermissionSetCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/UpdatePermissionSet": {
      "post": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_UpdatePermissionSet",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePermissionSetCommand"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/GetPermissionSetList": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_GetPermissionSetList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionSet"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/GetMySystemPermission": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_GetMySystemPermission",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionSet"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/GetMyRoomsPermission": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_GetMyRoomsPermission",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserGroup"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/GetOnePermissionSetQuery": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_GetOnePermissionSetQuery",
        "parameters": [
          {
            "name": "setId",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PermissionSet"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/UserPermission/GetPermissionSetNameList": {
      "get": {
        "tags": [
          "UserPermission"
        ],
        "operationId": "UserPermission_GetPermissionSetNameList",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "nullable": true,
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/PermissionSetDto"
                      }
                    ]
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/WeatherForecast": {
      "post": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "WeatherForecast_Get",
        "requestBody": {
          "x-name": "cmd",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetWeatherForecastsQuery"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "SimpleBookingDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "editable": {
            "type": "boolean"
          },
          "viewable": {
            "type": "boolean"
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "infoCode": {
            "type": "string",
            "nullable": true
          },
          "resourceId": {
            "type": "integer",
            "format": "int32"
          },
          "roomId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "color": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/BookingStatus"
          },
          "bookingType": {
            "$ref": "#/components/schemas/BookingType"
          },
          "bookingId": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BookingStatus": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Confirmed",
          "Finished",
          "NoShow",
          "Stage1",
          "Stage2",
          "Stage3",
          "Cancelled",
          "Rejected",
          "Class",
          "ForBooking"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ]
      },
      "BookingType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Closed",
          "AnyoneWithCard",
          "UserWithCard",
          "FreeAccess"
        ],
        "enum": [
          1,
          2,
          3,
          4
        ]
      },
      "GetAvailableBookingCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roomIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateSimpleBookingCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "bookingDetailDto": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingDetailDto"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "bookingType": {
            "$ref": "#/components/schemas/BookingType"
          },
          "roomId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "BookingDetailDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "description": {
            "type": "string",
            "nullable": true
          },
          "equipmentsID": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "customFields": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/CustomField"
            }
          }
        }
      },
      "CustomField": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Booking": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "bookingStatus": {
                "$ref": "#/components/schemas/BookingStatus"
              },
              "bookingDetails": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/BookingDetails"
                  }
                ]
              },
              "bookingDetailsId": {
                "type": "integer",
                "format": "int32"
              },
              "start": {
                "type": "string",
                "format": "date-time"
              },
              "end": {
                "type": "string",
                "format": "date-time"
              },
              "bookingType": {
                "$ref": "#/components/schemas/BookingType"
              },
              "room": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/Room"
                  }
                ]
              },
              "roomId": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "bookingApplicationUser": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/BookingApplicationUser"
                }
              }
            }
          }
        ]
      },
      "BookingDetails": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "users": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "equipments": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Equipment"
            }
          }
        }
      },
      "Equipment": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "departmentId": {
                "type": "integer",
                "format": "int32",
                "nullable": true
              },
              "count": {
                "type": "integer",
                "format": "int32"
              },
              "maxCount": {
                "type": "integer",
                "format": "int32"
              },
              "bookingDetailsList": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/BookingDetails"
                }
              },
              "equipmentLoans": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/EquipmentLoan"
                }
              }
            }
          }
        ]
      },
      "EquipmentLoan": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "booking": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/Booking"
              }
            ]
          },
          "loanDate": {
            "type": "string",
            "format": "date-time"
          },
          "returnDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "equipmentList": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Equipment"
            }
          },
          "userContacts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          },
          "staffContacts": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/Contact"
            }
          }
        }
      },
      "Contact": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "phone": {
            "type": "string",
            "nullable": true
          },
          "userCode": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AuditableEntity": {
        "type": "object",
        "x-abstract": true,
        "additionalProperties": false,
        "properties": {
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "string",
            "nullable": true
          },
          "lastModified": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastModifiedBy": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Room": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "shortName": {
                "type": "string",
                "nullable": true
              },
              "chineseName": {
                "type": "string",
                "nullable": true
              },
              "mappingKey": {
                "type": "string",
                "nullable": true
              },
              "roomSettings": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RoomSettings"
                  }
                ]
              },
              "roomSettingsId": {
                "type": "integer",
                "format": "int32"
              },
              "combinableRooms": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "roomSets": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/RoomSet"
                }
              },
              "roomExtraInfoFields": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/RoomExtraInfoField"
                }
              }
            }
          }
        ]
      },
      "RoomSettings": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "bookingPeriods": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RoomTimeslot"
            }
          },
          "bookingUserMode": {
            "$ref": "#/components/schemas/BookingUserMode"
          },
          "autoRelease": {
            "type": "integer",
            "format": "int32"
          },
          "disabled": {
            "type": "boolean"
          },
          "defaultBookingType": {
            "$ref": "#/components/schemas/BookingType"
          },
          "inAdvanceDay": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "RoomTimeslot": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "$ref": "#/components/schemas/DayOfWeek"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "interval": {
            "type": "string",
            "format": "time-span"
          }
        }
      },
      "DayOfWeek": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Sunday",
          "Monday",
          "Tuesday",
          "Wednesday",
          "Thursday",
          "Friday",
          "Saturday"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "BookingUserMode": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Anyone",
          "Admin"
        ],
        "enum": [
          0,
          1
        ]
      },
      "RoomSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "allRooms": {
                "type": "boolean"
              },
              "softwareSystem": {
                "type": "boolean"
              },
              "rooms": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          }
        ]
      },
      "RoomExtraInfoField": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BookingApplicationUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "applicationUserId": {
            "type": "string",
            "nullable": true
          },
          "bookingId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CancelCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bookingId": {
            "type": "integer",
            "format": "int32"
          },
          "reason": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateSimpleBookingCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bookingId": {
            "type": "integer",
            "format": "int32"
          },
          "roomId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "names": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "bookingDetailDto": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/BookingDetailDto"
              }
            ]
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "bookingType": {
            "$ref": "#/components/schemas/BookingType"
          }
        }
      },
      "EquipmentNameDtos": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "equipmentCode": {
            "type": "string",
            "nullable": true
          },
          "departmentCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateEquipmentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "departmentCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "DeleteEquipmentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "equipmentCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateEquipmentCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "equipmentCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "departmentCode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RoomNameListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roomExtraInfoFields": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RoomExtraInfoField"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "idCode": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "chineseName": {
            "type": "string",
            "nullable": true
          },
          "mappingKey": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateUpdateRoomDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roomId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "shortName": {
            "type": "string",
            "nullable": true
          },
          "chineseName": {
            "type": "string",
            "nullable": true
          },
          "mappingKey": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "format": "date-time"
          },
          "end": {
            "type": "string",
            "format": "date-time"
          },
          "timeSpanMinutes": {
            "type": "integer",
            "format": "int32"
          },
          "bookingUserModeId": {
            "type": "integer",
            "format": "int32"
          },
          "autoRelease": {
            "type": "integer",
            "format": "int32"
          },
          "disabled": {
            "type": "boolean"
          },
          "defaultBookingTypeId": {
            "type": "integer",
            "format": "int32"
          },
          "inAdvanceDay": {
            "type": "integer",
            "format": "int32"
          },
          "roomExtraInfoFields": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RoomExtraInfoField"
            }
          }
        }
      },
      "CreateRoomCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateUpdateRoomDto"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "Unit": {
        "type": "object",
        "description": "Represents a void type, since Void is not a valid return type in C#.",
        "additionalProperties": false
      },
      "UpdateRoomCommand": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateUpdateRoomDto"
          },
          {
            "type": "object",
            "additionalProperties": false
          }
        ]
      },
      "CreateRoomSetCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "allRoom": {
            "type": "boolean"
          },
          "roomIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UpdateRoomSetCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "allRoom": {
            "type": "boolean"
          },
          "roomIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DeleteRoomSetCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetAllRoomSets": {
        "type": "object",
        "additionalProperties": false
      },
      "RoomSetDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roomIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "allRoom": {
            "type": "boolean"
          }
        }
      },
      "RoomSetSimpleDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "RoomExtraInfoTemplate": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "key": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "$ref": "#/components/schemas/FieldType"
          }
        }
      },
      "FieldType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "String",
          "Number"
        ],
        "enum": [
          1,
          2
        ]
      },
      "UpdateRoomExtraFieldsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "roomExtraInfoTemplate": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/RoomExtraInfoTemplate"
            }
          }
        }
      },
      "BookingEvent": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "start": {
            "type": "string",
            "nullable": true
          },
          "end": {
            "type": "string",
            "nullable": true
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "resourceid": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SendResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "messageId": {
            "type": "string",
            "nullable": true
          },
          "errorMessages": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "successful": {
            "type": "boolean"
          }
        }
      },
      "SendTestMailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "subject": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SimpleServiceDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateEmailSettingsCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "settings": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SmtpClientOptions"
              }
            ]
          }
        }
      },
      "SmtpClientOptions": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "server": {
            "type": "string",
            "nullable": true
          },
          "port": {
            "type": "integer",
            "format": "int32"
          },
          "user": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "useSsl": {
            "type": "boolean"
          },
          "requiresAuthentication": {
            "type": "boolean"
          },
          "preferredEncoding": {
            "type": "string",
            "nullable": true
          },
          "usePickupDirectory": {
            "type": "boolean"
          },
          "mailPickupDirectory": {
            "type": "string",
            "nullable": true
          },
          "socketOptions": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/SecureSocketOptions"
              }
            ]
          }
        }
      },
      "SecureSocketOptions": {
        "type": "integer",
        "description": "Secure socket options.",
        "x-enumNames": [
          "None",
          "Auto",
          "SslOnConnect",
          "StartTls",
          "StartTlsWhenAvailable"
        ],
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "PaginatedListOfTodoItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TodoItemDto"
            }
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "TodoItemDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          },
          "priority": {
            "type": "integer",
            "format": "int32"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "bookingId": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoItemCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "done": {
            "type": "boolean"
          }
        }
      },
      "UpdateTodoItemDetailCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "listId": {
            "type": "integer",
            "format": "int32"
          },
          "priority": {
            "$ref": "#/components/schemas/PriorityLevel"
          },
          "note": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PriorityLevel": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "None",
          "Low",
          "Medium",
          "High"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "TodosVm": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "priorityLevels": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/PriorityLevelDto"
            }
          },
          "lists": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TodoListDto"
            }
          }
        }
      },
      "PriorityLevelDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "TodoListDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "colour": {
            "type": "string",
            "nullable": true
          },
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TodoItemDto"
            }
          }
        }
      },
      "CreateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "room": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "UpdateTodoListCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "title": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "SimpleUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "userEmail": {
            "type": "string",
            "nullable": true
          },
          "username": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "PaginatedListOfSimpleUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "items": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/SimpleUser"
            }
          },
          "pageIndex": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "hasPreviousPage": {
            "type": "boolean"
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "GetAllUsersWithPage": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "pageNumber": {
            "type": "integer",
            "format": "int32"
          },
          "pageSize": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateUserSimpleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "username": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "externalUserId": {
            "type": "string",
            "nullable": true
          },
          "groupIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UserGroup": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "userGroupApplicationUsers": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/UserGroupApplicationUser"
                }
              },
              "userRoles": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/UserRole"
                }
              }
            }
          }
        ]
      },
      "UserGroupApplicationUser": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "applicationUserId": {
            "type": "string",
            "nullable": true
          },
          "userGroup": {
            "nullable": true,
            "oneOf": [
              {
                "$ref": "#/components/schemas/UserGroup"
              }
            ]
          },
          "userGroupId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserRole": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "roomSet": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/RoomSet"
                  }
                ]
              },
              "roomSetId": {
                "type": "integer",
                "format": "int32"
              },
              "permissionSet": {
                "nullable": true,
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/PermissionSet"
                  }
                ]
              },
              "permissionSetId": {
                "type": "integer",
                "format": "int32"
              },
              "userGroups": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/UserGroup"
                }
              }
            }
          }
        ]
      },
      "PermissionSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "permissions": {
                "type": "array",
                "nullable": true,
                "items": {
                  "$ref": "#/components/schemas/UserPermission"
                }
              }
            }
          }
        ]
      },
      "UserPermission": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "AllPermission",
          "BookingViewOnly",
          "BookingMakeForMyself",
          "BookingMakeAnyTime",
          "BookingMakeFixedTime",
          "BookingMakeAsOtherUserGroup",
          "BookingModifyCancel",
          "BookingMakeAsOtherUser",
          "BookingApprovalPending",
          "BookingModifyCancelViewRegional",
          "BookingModifyCancelViewAll",
          "BookingViewEquipment",
          "BookingViewAnyBooking",
          "BookingViewMyBooking",
          "BookingExtraItem",
          "FacilityManagement",
          "AccountManagement",
          "SmtpSetting",
          "ReportsAllUnit",
          "ReportsOwnUnit"
        ],
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          100,
          110,
          130,
          190,
          1000,
          2000
        ]
      },
      "CreateUserRoleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissionSetId": {
            "type": "integer",
            "format": "int32"
          },
          "roomSetId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdateUserRoleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissionSetId": {
            "type": "integer",
            "format": "int32"
          },
          "roomSetId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "DeleteUserRoleCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "CreateUserGroupCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "userIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "userRoleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UpdateUserGroupCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "userRoleIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "DeleteUserGroupCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "GetUserGroupById": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UserGroupDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              },
              "userIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "string"
                }
              },
              "userRoleIds": {
                "type": "array",
                "nullable": true,
                "items": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        ]
      },
      "AddGroupToUserCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "groupIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UserGroupNameDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/AuditableEntity"
          },
          {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "id": {
                "type": "integer",
                "format": "int32"
              },
              "name": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "UpdateSimpleUserGroupCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "groupIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "UserPermissionDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "value": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "CreatePermissionSetCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "permissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "allPermission": {
            "type": "boolean"
          }
        }
      },
      "DeletePermissionSetCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "UpdatePermissionSetCommand": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "allPermission": {
            "type": "boolean"
          },
          "permissions": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "PermissionSetDto": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "WeatherForecast": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32"
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "GetWeatherForecastsQuery": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}